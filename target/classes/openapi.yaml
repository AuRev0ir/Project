openapi: 3.0.1
info:
  title: API
  description: Test swagger
  contact:
    name: Danil
    url: https://myWebsite.ru
    email: myEmail@email.ru
  license:
    name: Apache 2.0
  version: 2.0.0
servers:
- url: http://localhost:8080
  description: Main server
- url: http://localhost:8081
  description: Spare server
paths:
  /organizations:
    get:
      tags:
      - Organization API
      summary: List of all organizations by rating
      operationId: organizationList
      responses:
        "403":
          description: Access blocked
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationDto'
        "400":
          description: Client Error
        "500":
          description: An error occurred on the server
    post:
      tags:
      - Organization API
      summary: Organization creation form
      operationId: addOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormOrganization'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationIdDto'
        "403":
          description: Access blocked
        "400":
          description: Client Error
        "500":
          description: An error occurred on the server
  /organizations/{idOrganization}/employees:
    post:
      tags:
      - Employee API
      summary: Employee creation form
      operationId: addEmployee
      parameters:
      - name: idOrganization
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormEmployee'
        required: true
      responses:
        "403":
          description: Access blocked
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeIdDto'
        "400":
          description: Client Error
        "500":
          description: An error occurred on the server
  /apiAdmin/userRegistration:
    post:
      tags:
      - REGISTRATION
      summary: User registration
      operationId: addNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormRegistration'
        required: true
      responses:
        "403":
          description: Access blocked
        "400":
          description: Client Error
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: string
        "500":
          description: An error occurred on the server
  /organizations/{idOrganization}:
    get:
      tags:
      - Employee API
      summary: List of employees of the organization by date of employment
      operationId: employeeList
      parameters:
      - name: idOrganization
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "403":
          description: Access blocked
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDto'
        "400":
          description: Client Error
        "500":
          description: An error occurred on the server
    delete:
      tags:
      - Organization API
      summary: Delete an organization with all employees
      operationId: deleteOrganization
      parameters:
      - name: idOrganization
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "403":
          description: Access blocked
        "400":
          description: Client Error
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: string
        "500":
          description: An error occurred on the server
    patch:
      tags:
      - Organization API
      summary: Organization edit
      operationId: editingOrganization
      parameters:
      - name: idOrganization
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormOrganization'
        required: true
      responses:
        "403":
          description: Access blocked
        "400":
          description: Client Error
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDto'
        "500":
          description: An error occurred on the server
  /organizations/{idOrganization}/employees/{idEmployee}:
    delete:
      tags:
      - Employee API
      summary: Delete an employee
      operationId: deleteEmployee
      parameters:
      - name: idOrganization
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: idEmployee
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "403":
          description: Access blocked
        "400":
          description: Client Error
        "200":
          description: Successful operation
          content:
            '*/*':
              schema:
                type: string
        "500":
          description: An error occurred on the server
    patch:
      tags:
      - Employee API
      summary: Employee edit
      operationId: editingEmployee
      parameters:
      - name: idOrganization
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: idEmployee
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormEmployee'
        required: true
      responses:
        "403":
          description: Access blocked
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDto'
        "400":
          description: Client Error
        "500":
          description: An error occurred on the server
components:
  schemas:
    FormOrganization:
      type: object
      properties:
        nameOrganization:
          type: string
        descriptionOrganization:
          type: string
        ratingOrganization:
          type: integer
          format: int64
    OrganizationIdDto:
      type: object
      properties:
        idOrganization:
          type: integer
          format: int64
    FormEmployee:
      type: object
      properties:
        nameEmployee:
          type: string
        surnameEmployee:
          type: string
        patronymicEmployee:
          type: string
        jobTitle:
          type: string
        dateOfEmployment:
          type: string
          format: date
    EmployeeIdDto:
      type: object
      properties:
        idEmployee:
          type: integer
          format: int64
    FormRegistration:
      type: object
      properties:
        nameNewUser:
          type: string
        emailNewUser:
          type: string
        dateOfEmploymentNewUser:
          type: string
          format: date
        passwordNewUser:
          type: string
        roleNewUser:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            type: string
        rolesNewUser:
          uniqueItems: true
          type: array
          items:
            type: string
    OrganizationDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        ratingOrganization:
          type: integer
          format: int64
        nameOrganization:
          type: string
        descriptionOrganization:
          type: string
    EmployeeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nameEmployee:
          type: string
        surnameEmployee:
          type: string
        patronymicEmployee:
          type: string
        jobTitle:
          type: string
        dateOfEmployment:
          type: string
          format: date
