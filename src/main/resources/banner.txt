Тестовое задание.

Есть 4 таблицы: Организации и Сотрудники, Пользователи и Роли.

Состав полей: 
Достаточно 3х полей для организации(придумать самому),
а для сотрудника ФИО, должность, дата трудоустройства.
Пользователи - идентификатор, почта, дата регистрации, пароль (не в открытом виде), связь с таблицей ролей. Роли - идентификатор, название. Должны быть: роль начальника и роль подчиненного. Разграничить доступ к функционалу разным ролям.

(Все что ниже описано как кнопки, должно быть сделано просто методами контроллеров на основании open api спецификации 3 версии)
Сделать приложение, которое на стартовую страницу выводит список всех организаций. 
При щелчке по организации открывается страница редактирования организации с кнопкой "Сотрудники". 
При щелчке на кнопку открывается список всех сотрудников организации отсортированных по дате трудоустройства. 
При щелчке на сотруднике открывается страница редактирования сотрудника. Так же в списковых формах напротив каждой строки должна быть кнопка "Удалить". 
В конце каждого списка кнопка "Создать", при щелчке на которую открывается форма создания сотрудника/организации. 

Прикрутить авторизацию с регистрацией пользователя и сохранением в БД.

Для бекенда Spring boot, Java11 (желательно заюзать стримы и фичи 11 Java ). 
Для организации слоя DAO использовать Spring Data JPA и на выбор один запрос реализовать native SQL и один JPQL.
Реализовать первоначальную миграцию таблиц при помощи liquibase + стартовый insert данных.
Сборку делать с помощью Maven.






